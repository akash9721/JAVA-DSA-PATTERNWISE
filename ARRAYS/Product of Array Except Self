+++++ Bruteforce approach ++++++++++++++++++++++++
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int ans[]=new int[nums.length];

        for(int i=0;i<nums.length;i++){
            int product=1;
            for(int j=0;j<nums.length;j++){
                if(i!=j){
                    product*=nums[j];
                }
            }
            ans[i]=product;
        }
        return ans;
    }
}


+++++++++++++ second approach using prefix and suffix sum +++++++++++++++++++++++
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int ans[]=new int[nums.length];
        int prefix[]=new int[nums.length];
        int suffix[]=new int[nums.length];

        prefix[0]=1;
        for(int i=1;i<nums.length;i++){
            prefix[i]=prefix[i-1]*nums[i-1];
        }

        suffix[nums.length-1]=1;
        for(int i=nums.length-2;i>=0;i--){
            suffix[i]=suffix[i+1]*nums[i+1];
        }

        for(int i=0;i<nums.length;i++){
            ans[i]=prefix[i]*suffix[i];
        }

        return ans;
    }
}


+++++++++++++++++++++++++ 
public class Solution {
public int[] productExceptSelf(int[] nums) {
    int n = nums.length;
    int[] res = new int[n];
    res[0] = 1;
    for (int i = 1; i < n; i++) {
        res[i] = res[i - 1] * nums[i - 1];
    }
    int right = 1;
    for (int i = n - 1; i >= 0; i--) {
        res[i] *= right;
        right *= nums[i];
    }
    return res;
}


Example 1:

Input: nums = [1,2,3,4]
Output: [24,12,8,6]
Example 2:

Input: nums = [-1,1,0,-3,3]
Output: [0,0,9,0,0]

