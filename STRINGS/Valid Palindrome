+++++++++++++++++++++++++++++++++++using simple app +++++++++++++++++++++++++++++++++++++++++

class Solution {
    public boolean isPalindrome(String s) {
        String res="";
        int n=s.length();
        for(int i=0;i<n;i++){
            if((s.charAt(i)>='A' && s.charAt(i)<='Z') || (s.charAt(i)>='a' && s.charAt(i)<='z') || (s.charAt(i)>='0' && s.charAt(i)<='9'))
            res+=s.charAt(i);
        }
        res=res.toLowerCase();
        int left=0;
        int right=res.length()-1;
        while(left<=right){
            if(res.charAt(left)!=res.charAt(right)){
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}


+++++++++++++++++++++++++++++++++ using predefine methods ++++++++++++++++++++++++++++++++

class Solution {

       private static String convertInto(String str) {
		String st = "";
		for (int i = 0; i < str.length(); i++) {
			if (Character.isAlphabetic(str.charAt(i))) {
				st += str.charAt(i);
			} else if (Character.isLetterOrDigit(str.charAt(i))) {
				st += str.charAt(i);
			}
		}
		return st;
	}

    	public static boolean isPalindrome(String s) {
		String str= convertInto(s);
		str=str.toLowerCase();
		System.out.println(str);
		char a[]=str.toCharArray();
        int i=0;
        int j=a.length-1;
        while(i<j) {
        	if(a[i]!=a[j])
        		return false;
        	i++;
        	j--;
        }
        return true;
	}
}
